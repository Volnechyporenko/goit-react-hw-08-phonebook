{"version":3,"sources":["redux/auth/authOperation.js","components/Views/RegisterView/RegisterView.js","components/Views/LoginView/LoginView.js","components/Form/Form.js","components/Search/Search.js","components/ContactList/ContactItem/ContactItem.js","components/ContactList/ContactList.js","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-selectors.js","redux/auth/authSelectors.js","components/Views/Phonebook/Phonebook.js","redux/phonebook/phonebook-operations.js","components/PrivateRoute.js","components/PublicRoute.js","components/App.js","redux/phonebook/phonebook-reducer.js","redux/auth/authReducer.js","redux/store.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","register","createAsyncThunk","credentials","a","post","data","Error","console","log","login","logout","fetchRefreshUser","_","thunkAPI","state","getState","persistedToken","auth","get","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","RegisterView","classes","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","onSubmit","e","preventDefault","authOperation","TextField","required","fullWidth","id","label","autoComplete","autoFocus","onChange","type","Button","color","Grid","container","item","Link","href","LoginView","Form","number","setNumber","event","uuid","evt","currentTarget","data-cy","defaultCountry","phone","clearNumber","replace","Search","filter","InputProps","startAdornment","InputAdornment","position","root","minWidth","bullet","transform","title","fontSize","pos","marginBottom","ContactItem","contact","handleClick","Card","CardContent","CardActions","size","onClick","ContactList","contacts","onDelete","map","setFilter","createAction","fetchContactRequest","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","getContacts","phonebook","items","getFilter","getIsLoggedIn","isLoggedIn","getUsername","user","button","connect","userName","fetchContact","then","catch","error","addContact","newContact","deleteContact","delete","useEffect","filteredContacts","useMemo","toLocaleLowerCase","includes","xs","startIcon","find","alert","length","PrivateRoute","children","routeProps","useSelector","to","PublicRoute","restricted","shouldRedirect","App","exact","path","createReducer","payload","combineReducers","authSlice","createSlice","initialState","isError","extraReducers","fulfilled","rejected","action","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","phonebookReducer","persistReducer","authReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.501a17b2.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common['Authorization'] = '';\r\n  },\r\n};\r\n\r\nconst register = createAsyncThunk('auth/register', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials);\r\n    if (!data.token) {\r\n      throw new Error(data);\r\n    }\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    console.log('error', error);\r\n  }\r\n});\r\n\r\nconst login = createAsyncThunk('auth/login', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n    if (!data.token) {\r\n      throw new Error(data);\r\n    }\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    console.log('error', error);\r\n    return error;\r\n  }\r\n});\r\n\r\nconst logout = createAsyncThunk('auth/logout', async () => {\r\n  try {\r\n    const { data } = await axios.post('/users/logout');\r\n    token.unset();\r\n  } catch (error) {\r\n    console.log('error', error);\r\n  }\r\n});\r\n\r\nconst fetchRefreshUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      throw new Error();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get('/users/current');\r\n      return data;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  },\r\n);\r\n\r\nexport default { register, login, logout, fetchRefreshUser };\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport authOperation from '../../../redux/auth/authOperation';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst RegisterView = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value);\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log('Регистрируемся');\r\n    if (!name && !email && !password) {\r\n      return;\r\n    }\r\n    dispatch(authOperation.register({ name, email, password }));\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"name\"\r\n            label=\"Your name\"\r\n            name=\"name\"\r\n            autoComplete=\"name\"\r\n            autoFocus\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={handleChange}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign up\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item>\r\n              <Link href=\"/login\" variant=\"body2\">\r\n                {'Already have an account? Sign in'}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RegisterView;\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport authOperation from '../../../redux/auth/authOperation';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst LoginView = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log('Регистрируемся');\r\n    if (!email && !password) {\r\n      return;\r\n    }\r\n    dispatch(authOperation.login({ email, password }));\r\n\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={handleChange}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item>\r\n              <Link href=\"/register\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","import { useState } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MuiPhoneNumber from 'material-ui-phone-number';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Form = ({ onSubmit }) => {\r\n  const classes = useStyles();\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChangeName = evt => {\r\n    const { value } = evt.currentTarget;\r\n    setName(value);\r\n  };\r\n\r\n  const handleChangePhone = phone => {\r\n    console.log('phone', phone);\r\n    const clearNumber = phone.replace('+', '');\r\n    setNumber(clearNumber);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    onSubmit({\r\n      id: uuid(),\r\n      name,\r\n      number,\r\n    });\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n      <TextField\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        required\r\n        fullWidth\r\n        id=\"name\"\r\n        label=\"Name\"\r\n        name=\"name\"\r\n        autoComplete=\"name\"\r\n        autoFocus\r\n        onChange={handleChangeName}\r\n      />\r\n      <MuiPhoneNumber\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        required\r\n        fullWidth\r\n        name=\"number\"\r\n        label=\"Phone Number\"\r\n        data-cy=\"user-phone\"\r\n        defaultCountry={'ua'}\r\n        value={number}\r\n        onChange={handleChangePhone}\r\n      />\r\n      <Button\r\n        type=\"submit\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.submit}\r\n      >\r\n        Add Contact\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","import PropTypes from 'prop-types';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst Search = ({ onChange, filter }) => {\r\n  const handleChange = event => {\r\n    const value = event.currentTarget.value;\r\n    onChange(value);\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      variant=\"outlined\"\r\n      margin=\"normal\"\r\n      required\r\n      fullWidth\r\n      type=\"text\"\r\n      id=\"filter\"\r\n      label=\"Find contacts by name\"\r\n      name=\"filter\"\r\n      value={filter}\r\n      autoFocus\r\n      onChange={handleChange}\r\n      InputProps={{\r\n        startAdornment: (\r\n          <InputAdornment position=\"start\">\r\n            <SearchIcon />\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nSearch.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Search;\r\n","import PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: '100%',\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nconst ContactItem = ({ contact, handleClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {contact.name}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {contact.number}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          onClick={() => handleClick(contact.id)}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  handleClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import ContactItem from './ContactItem/ContactItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, onDelete }) => (\r\n  <div>\r\n    {contacts.map(contact => (\r\n      <ContactItem contact={contact} handleClick={onDelete} key={contact.id} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({ id: PropTypes.string.isRequired }),\r\n  ).isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const setFilter = createAction('phonebook/setFilter');\r\n\r\nexport const fetchContactRequest = createAction(\r\n  'phonebook/fetchContactRequest',\r\n);\r\nexport const fetchContactSuccess = createAction(\r\n  'phonebook/fetchContactSuccess',\r\n);\r\nexport const fetchContactError = createAction('phonebook/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('phonebook/addContactRequest');\r\nexport const addContactSuccess = createAction('phonebook/addContactSuccess');\r\nexport const addContactError = createAction('phonebook/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'phonebook/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'phonebook/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('phonebook/deleteContactError');\r\n","export const getContacts = state => state.phonebook.items;\r\nexport const getFilter = state => state.phonebook.filter;\r\n","export const getIsLoggedIn = state => state.auth.isLoggedIn;\r\n\r\nexport const getUsername = state => state.auth.user.name;\r\n","import { useEffect, useMemo } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Form from '../../Form/Form';\r\nimport Search from '../../Search/Search';\r\nimport ContactList from '../../ContactList/ContactList';\r\nimport { setFilter } from '../../../redux/phonebook/phonebook-actions';\r\nimport {\r\n  fetchContact,\r\n  addContact,\r\n  deleteContact,\r\n} from '../../../redux/phonebook/phonebook-operations';\r\nimport {\r\n  getContacts,\r\n  getFilter,\r\n} from '../../../redux/phonebook/phonebook-selectors';\r\nimport { getUsername } from '../../../redux/auth/authSelectors';\r\nimport authOperation from '../../../redux/auth/authOperation';\r\n\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Phonebook = ({\r\n  contacts,\r\n  filter,\r\n  addContact,\r\n  setFilter,\r\n  deleteContact,\r\n  fetchContact,\r\n  userName,\r\n  logout,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    fetchContact();\r\n  }, []);\r\n\r\n  const onAddContact = newContact => {\r\n    const existedContact = contacts.find(\r\n      contact => contact.name === newContact.name,\r\n    );\r\n    if (existedContact) {\r\n      alert('Такой контакт уже есть!');\r\n      return;\r\n    }\r\n    addContact(newContact);\r\n  };\r\n\r\n  const getFilteredContacts = () =>\r\n    contacts.filter(contact => {\r\n      return contact.name\r\n        .toLocaleLowerCase()\r\n        .includes(filter.toLocaleLowerCase());\r\n    });\r\n\r\n  const filteredContacts = useMemo(() => getFilteredContacts(), [\r\n    contacts,\r\n    filter,\r\n  ]);\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Grid container>\r\n          <Grid item xs>\r\n            <Avatar className={classes.avatar}>\r\n              <AccountCircleIcon />\r\n            </Avatar>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.button}\r\n              startIcon={<ExitToAppIcon />}\r\n              onClick={logout}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Phonebook {userName}\r\n        </Typography>\r\n        <Form onSubmit={onAddContact} />\r\n        {contacts.length > 0 && (\r\n          <>\r\n            <Typography component=\"h2\" variant=\"h5\">\r\n              Contacts\r\n            </Typography>\r\n            <Search onChange={setFilter} filter={filter} />\r\n            {filteredContacts.length > 0 ? (\r\n              <ContactList\r\n                contacts={filteredContacts}\r\n                onDelete={deleteContact}\r\n              />\r\n            ) : (\r\n              <span>Contacts is not found</span>\r\n            )}\r\n          </>\r\n        )}\r\n        {!contacts.length && <span>No contacts yet. Add contacts</span>}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getContacts(state),\r\n  filter: getFilter(state),\r\n  userName: getUsername(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContact: () => dispatch(fetchContact()),\r\n  addContact: newContact => dispatch(addContact(newContact)),\r\n  setFilter: filter => dispatch(setFilter(filter)),\r\n  deleteContact: id => dispatch(deleteContact(id)),\r\n  logout: () => dispatch(authOperation.logout()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\r\n","import axios from 'axios';\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './phonebook-actions';\r\n\r\nexport const fetchContact = () => dispatch => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n    .catch(error => dispatch(fetchContactError(error)));\r\n};\r\n\r\nexport const addContact = newContact => dispatch => {\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', newContact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n","import { Route, Redirect } from 'react-router';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsLoggedIn } from '../redux/auth/authSelectors';\r\n\r\nconst PrivateRoute = ({ children, ...routeProps }) => {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to=\"/login\" />}\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { Redirect, Route } from 'react-router';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsLoggedIn } from '../redux/auth/authSelectors';\r\n\r\nconst PublicRoute = ({ children, restricted = false, ...routeProps }) => {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to=\"/contacts\" /> : children}\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default PublicRoute;\r\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Switch } from 'react-router';\nimport RegisterView from './Views/RegisterView/RegisterView';\nimport LoginView from './Views/LoginView/LoginView';\nimport Phonebook from './Views/Phonebook/Phonebook';\nimport PrivateRoute from './PrivateRoute';\nimport PublicRoute from './PublicRoute';\nimport authOperation from '../redux/auth/authOperation';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperation.fetchRefreshUser());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Switch>\n        <PrivateRoute exact path=\"/\" />\n\n        <PublicRoute path=\"/register\" restricted>\n          <RegisterView />\n        </PublicRoute>\n\n        <PublicRoute path=\"/login\" restricted>\n          <LoginView />\n        </PublicRoute>\n\n        <PrivateRoute path=\"/contacts\">\n          <Phonebook />\n        </PrivateRoute>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as a from './phonebook-actions';\r\n\r\nconst initialItems = [];\r\n\r\nconst items = createReducer(initialItems, {\r\n  [a.fetchContactSuccess]: (_, { payload }) => payload,\r\n  [a.addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [a.deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [a.setFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport authOperation from './authOperation';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isError: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperation.register.fulfilled](state, { payload }) {\r\n      state.user = payload.user;\r\n      state.token = payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperation.login.fulfilled](state, { payload }) {\r\n      state.user = payload.user;\r\n      state.token = payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n\r\n    [authOperation.login.rejected](state, { error }) {\r\n      state.user = {};\r\n      state.token = '';\r\n      state.isLoggedIn = false;\r\n      state.isError = error;\r\n    },\r\n\r\n    [authOperation.logout.fulfilled](state) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n\r\n    [authOperation.fetchRefreshUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\nimport authReducer from './auth/authReducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = { key: 'auth', storage, whitelist: ['token'] };\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    phonebook: phonebookReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './components/App';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}